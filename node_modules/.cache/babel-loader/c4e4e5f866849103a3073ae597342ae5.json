{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\ecommerce-store-react\\\\src\\\\context.js\";\nimport React, { Component } from 'react';\nimport { storeProducts, detailProduct } from './data';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProductContext = /*#__PURE__*/React.createContext();\n\nclass ProductProvider extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      products: [],\n      detailProduct: detailProduct,\n      cart: [],\n      modalOpen: false,\n      modalProduct: detailProduct,\n      cartSubtotal: 0,\n      cartTax: 0,\n      cartTotal: 0\n    };\n\n    this.setProducts = () => {\n      let tempProducts = [];\n      storeProducts.forEach(item => {\n        const singleItem = { ...item\n        };\n        tempProducts = [...tempProducts, singleItem];\n      });\n      this.setState(() => {\n        return {\n          products: tempProducts\n        };\n      });\n    };\n\n    this.getItem = id => {\n      const product = this.state.products.find(item => item.id === id);\n      return product;\n    };\n\n    this.handleDetail = id => {\n      const product = this.getItem(id);\n      this.setState(() => {\n        return {\n          detailProduct: product\n        };\n      });\n    };\n\n    this.addToCart = id => {\n      let tempProducts = [...this.state.products];\n      const index = tempProducts.indexOf(this.getItem(id));\n      const product = tempProducts[index];\n      product.inCart = true;\n      product.count = 1;\n      const price = product.price;\n      product.total = price;\n      this.setState(() => {\n        return {\n          products: tempProducts,\n          cart: [...this.state.cart, product]\n        };\n      }, () => {\n        this.addTotals();\n      });\n    };\n\n    this.openModal = id => {\n      const product = this.getItem(id);\n      this.setState(() => {\n        return {\n          modalProduct: product,\n          modalOpen: true\n        };\n      });\n    };\n\n    this.closeModal = () => {\n      this.setState(() => {\n        return {\n          modalOpen: false\n        };\n      });\n    };\n\n    this.increment = id => {\n      let tempCart = [...this.state.cart];\n      const selectedProduct = tempCart.find(item => item.id === id);\n      const index = tempCart.indexOf(selectedProduct);\n      const product = tempCart[index];\n    };\n\n    this.decrement = id => {\n      console.log(\"this is dccrement method\");\n    };\n\n    this.removeItem = id => {\n      let tempProducts = [...this.state.products];\n      let tempCart = [...this.state.cart];\n      tempCart = tempCart.filter(item => item.id !== id);\n      const index = tempProducts.indexOf(this.getItem(id));\n      let removedProduct = tempProducts[index];\n      removedProduct.inCart = false;\n      removedProduct.count = 0;\n      removedProduct.total = 0;\n      this.setState(() => {\n        return {\n          cart: [...tempCart],\n          products: [...tempProducts]\n        };\n      }, () => {\n        this.addTotals();\n      });\n    };\n\n    this.clearCart = () => {\n      this.setState(() => {\n        return {\n          cart: []\n        };\n      }, () => {\n        this.setProducts();\n        this.addTotals();\n      });\n    };\n\n    this.addTotals = () => {\n      let subTotal = 0;\n      this.state.cart.map(item => subTotal += item.total);\n      const tempTax = subTotal * 0.13;\n      const tax = parseFloat(tempTax.toFixed(2));\n      const total = parseFloat(subTotal + tax).toFixed(2);\n      this.setState(() => {\n        return {\n          cartSubtotal: subTotal.toFixed(2),\n          cartTax: tax,\n          cartTotal: total\n        };\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.setProducts();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(ProductContext.Provider, {\n      value: { ...this.state,\n        handleDetail: this.handleDetail,\n        addToCart: this.addToCart,\n        openModal: this.openModal,\n        closeModal: this.closeModal,\n        increment: this.increment,\n        decrement: this.decrement,\n        removeItem: this.removeItem,\n        clearCart: this.clearCart\n      },\n      children: this.props.children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nconst ProductConsumer = ProductContext.Consumer;\nexport { ProductProvider, ProductConsumer };","map":{"version":3,"sources":["C:/Users/user/ecommerce-store-react/src/context.js"],"names":["React","Component","storeProducts","detailProduct","ProductContext","createContext","ProductProvider","state","products","cart","modalOpen","modalProduct","cartSubtotal","cartTax","cartTotal","setProducts","tempProducts","forEach","item","singleItem","setState","getItem","id","product","find","handleDetail","addToCart","index","indexOf","inCart","count","price","total","addTotals","openModal","closeModal","increment","tempCart","selectedProduct","decrement","console","log","removeItem","filter","removedProduct","clearCart","subTotal","map","tempTax","tax","parseFloat","toFixed","componentDidMount","render","props","children","ProductConsumer","Consumer"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport { storeProducts, detailProduct } from './data';\r\n\r\nconst ProductContext = React.createContext();\r\n\r\nclass ProductProvider extends Component {\r\n    state = {\r\n        products: [],\r\n        detailProduct: detailProduct,\r\n        cart:[],\r\n        modalOpen:false,\r\n        modalProduct:detailProduct,\r\n        cartSubtotal: 0,\r\n        cartTax: 0,\r\n        cartTotal: 0,\r\n    };\r\n    componentDidMount() {\r\n        this.setProducts();\r\n    }\r\n    setProducts = () => {\r\n        let tempProducts = [];\r\n        storeProducts.forEach(item => {\r\n            const singleItem = {...item};\r\n            tempProducts =[...tempProducts, singleItem];\r\n        });\r\n    this.setState(() => {\r\n        return { products: tempProducts};\r\n    });\r\n\r\n    };\r\n\r\n    getItem = (id) => {\r\n        const product = this.state.products.find(item => item.id===id);\r\n        return product;\r\n    }\r\n    handleDetail = (id) => {\r\n        const product = this.getItem(id);\r\n        this.setState(()=> {\r\n            return {detailProduct:product}\r\n        })\r\n    };\r\n    addToCart = (id) => {\r\n       let tempProducts = [...this.state.products];\r\n       const index = tempProducts.indexOf(this.getItem(id));\r\n       const product = tempProducts[index];\r\n       product.inCart = true;\r\n       product.count =1;\r\n       const price = product.price;\r\n       product.total = price;\r\n\r\n        this.setState(()=>{\r\n            return {products: tempProducts,cart:[...this.state.cart, product]};\r\n        },\r\n        () => {\r\n            this.addTotals();\r\n        });\r\n    };\r\n    openModal = id => {\r\n        const product = this.getItem(id);\r\n        this.setState(()=>{\r\n            return {modalProduct:product, modalOpen:true}\r\n        })\r\n    }\r\n    closeModal = () => {\r\n        this.setState(()=> {\r\n            return {modalOpen:false}\r\n        })\r\n    }\r\n    increment = (id) => {\r\n         let tempCart = [...this.state.cart];\r\n         const selectedProduct = tempCart.find(item=>item.id ===id)\r\n\r\n         const index = tempCart.indexOf(selectedProduct);\r\n         const product = tempCart[index]\r\n    }\r\n    decrement = (id) => {\r\n        console.log(\"this is dccrement method\");\r\n    }\r\n    removeItem = (id) => {\r\n         let tempProducts = [...this.state.products];\r\n         let tempCart = [...this.state.cart];\r\n         tempCart = tempCart.filter(item =>item.id !==id);\r\n         const index = tempProducts.indexOf(this.getItem(id));\r\n         let removedProduct = tempProducts[index];\r\n         removedProduct.inCart = false;\r\n         removedProduct.count = 0;\r\n         removedProduct.total = 0;\r\n\r\n         this.setState(()=>{\r\n             return {\r\n                 cart:[...tempCart],\r\n                 products:[...tempProducts],                 \r\n             };\r\n         },() => {\r\n             this.addTotals();\r\n         });\r\n    };\r\n    clearCart = () => {\r\n        this.setState(() =>{\r\n            return { cart: [] };\r\n        }, ()=>{\r\n            this.setProducts();\r\n            this.addTotals();\r\n           });       \r\n    };\r\n    addTotals = () => {\r\n        let subTotal = 0;\r\n        this.state.cart.map(item=> (subTotal += item.total));\r\n        const tempTax = subTotal * 0.13;\r\n        const tax = parseFloat(tempTax.toFixed(2));\r\n        const total = parseFloat(subTotal + tax).toFixed(2);\r\n        this.setState(() =>{\r\n            return{\r\n                cartSubtotal:subTotal.toFixed(2),\r\n                cartTax: tax,\r\n                cartTotal:total,\r\n            }\r\n        })\r\n    }\r\n    render() {\r\n        return(\r\n        <ProductContext.Provider value={{\r\n            ...this.state, \r\n            handleDetail: this.handleDetail,\r\n            addToCart: this.addToCart, \r\n            openModal:this.openModal, \r\n            closeModal:this.closeModal,\r\n            increment: this.increment,\r\n            decrement: this.decrement,\r\n            removeItem: this.removeItem,\r\n            clearCart: this.clearCart}}>\r\n            {this.props.children}\r\n        </ProductContext.Provider>\r\n        )\r\n    }\r\n}\r\nconst ProductConsumer = ProductContext.Consumer;\r\n\r\nexport {ProductProvider, ProductConsumer};"]},"metadata":{},"sourceType":"module"}